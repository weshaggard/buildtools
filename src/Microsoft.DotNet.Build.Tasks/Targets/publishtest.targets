<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="ResolveNuGetPackages" AssemblyFile="$(ToolsDir)Microsoft.DotNet.Build.Tasks.dll"/>
  
  <PropertyGroup>
    <TestRuntimePackageConfig>$(MSBuildThisFileDirectory)test-runtime\packages.config</TestRuntimePackageConfig>
    <TestRuntimePackageSemaphore>$(PackagesDir)test-runtime-packages.config</TestRuntimePackageSemaphore>
  </PropertyGroup>

  <Target Name="RestoreTestRuntimePackage"
          BeforeTargets="ResolveNuGetPackages"
          Inputs="$(TestRuntimePackageConfig)"
          Outputs="$(TestRuntimePackageSemaphore)"
          Condition="'$(IsTestProject)' == 'true'">

    <Exec Command="$(NugetRestoreCommand) &quot;$(TestRuntimePackageConfig)&quot;" StandardOutputImportance="Low" />

    <Copy SourceFiles="$(TestRuntimePackageConfig)" DestinationFiles="$(TestRuntimePackageSemaphore)" ContinueOnError="true" SkipUnchangedFiles="true" />
    
  </Target>

  <PropertyGroup>
    <CopyTestToTestDirectory Condition="'$(CopyTestToTestDirectory)'==''">$(IsTestProject)</CopyTestToTestDirectory>
  </PropertyGroup>

  <Target Name="CopyTestToTestDirectory"
    Condition="'$(CopyTestToTestDirectory)'=='true'">

    <ResolveNuGetPackages PackagesConfigs="@(PackagesConfigs)"
                          PackageRoot="$(PackagesDir)"
                          Platform="$(PlatformTarget)"
                          Configuration="$(NuGetConfiguration)"
                          Language="$(Language)"
                          TargetFramework="%(TestTargetFramework.Identity)"
                          TargetPlatformMoniker="$(TargetPlatformMoniker)">

      <Output TaskParameter="ResolvedCopyLocal" ItemName="TestCopyLocal" />
    </ResolveNuGetPackages>

    <ItemGroup>
      <TestCopyLocal Include="@(RunTestsForProjectInputs)" Exclude="@(PackagesConfigs)" />
    </ItemGroup>

    <Copy
      SourceFiles="@(TestCopyLocal)"
      DestinationFolder="$(TestPath)%(TestTargetFramework.Folder)"
      SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      Retries="$(CopyRetryCount)"
      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">
      
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
      
  </Target>

</Project>